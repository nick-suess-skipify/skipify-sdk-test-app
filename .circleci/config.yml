version: 2.1

orbs:
  gcr: circleci/gcp-gcr@0.7.1
  gke: circleci/gcp-gke@1.4.0
  node: circleci/node@5.0.2

jobs:
  code-quality:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: medium
    steps:
      - checkout

      - node/install:
          node-version: '16.13'

      - run:
          name: Install dependencies
          command: |
            npm i

      - run:
          name: Lint code
          command: |
            npm run lint:scripts

      # - run:
      #     name: Run tests
      #     command: npm run test:cov -- --coverageReporters=lcov

      # - run:
      #     name: Send coverage report to coveralls
      #     when: always
      #     command: cat ./coverage/lcov.info | npx coveralls

  build-dev:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: medium
    steps:
      - checkout
      - gcr/gcr-auth
      - node/install:
          node-version: "16.13"

      - run:
          name: Install dependencies
          command: |
            gcloud auth print-access-token
            npm i

      - run:
          name: "build code base"
          command: npm run build:development

      - store_artifacts:
          path: dist

  build-stage:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: medium
    steps:
      - checkout

      - node/install:
          node-version: "16.13"

      - run:
          name: Install dependencies
          command: |
            npm i

      - run:
          name: "build code base"
          command: npm run build:staging

      - store_artifacts:
          path: dist

  build-prod:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: medium
    steps:
      - checkout

      - node/install:
          node-version: "16.13"

      - run:
          name: Install dependencies
          command: |
            npm i

      - run:
          name: "build code base"
          command: npm run build:production

      - store_artifacts:
          path: dist


workflows:
  always:
    jobs:
      - code-quality
      - build-dev:
          context: skipify-dev
          requires:
            - code-quality
  dev:
    jobs:
      - build-approval:
          type: approval
      - code-quality:
          requires:
            - build-approval
      - build-dev:
          context: skipify-dev
          requires:
            - build-approval
            - code-quality
  stage:
    jobs:
      - build-approval:
          type: approval
      - code-quality:
          requires:
            - build-approval
      - build-stage:
          context: skipify-stage
          requires:
            - build-approval
            - code-quality
  prod:
    jobs:
      - build-approval:
          type: approval
      - code-quality:
          requires:
            - build-approval
      - build-prod:
          context: skipify-prod
          requires:
            - build-approval
            - code-quality

# https://circleci.com/developer/orbs/orb/freighthub/gcp-storage
# incase we get approval follow this for setting up to push to cloud storage