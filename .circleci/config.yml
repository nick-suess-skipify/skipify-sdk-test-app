version: 2.1

orbs:
  gcr: circleci/gcp-gcr@0.15.0
  node: circleci/node@5.0.3
  gcp-cli: circleci/gcp-cli@3.0.1

prodTagFilter: &prodTagFilter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

stageTagFilter: &stageTagFilter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+(\.rc[0-9]+)?-stage$/

jobs:
  code-quality:
    executor: node/default
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Configure npm for JFrog Artifactory
          command: |
            npm set "$ARTIFACTORY_NPM_URL:_authToken=$ARTIFACTORY_SERVICE_AUTH_TOKEN"
      - run: npm ci
      - run: npm run all:lint
      # - run:
      #     name: Run tests with coverage
      #     command: npm run test:cov -- --coverageReporters=lcov

  build:
    parameters:
      environment:
        description: The environment we are building. Accepted values - dev, stage, or prod
        type: string
    executor: node/default
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Configure npm for JFrog Artifactory
          command: |
            npm set "$ARTIFACTORY_NPM_URL:_authToken=$ARTIFACTORY_SERVICE_AUTH_TOKEN"
      - run: npm ci
      - run:
          name: 'build all'
          command: npm run all:build:<< parameters.environment >>

      - persist_to_workspace:
          root: .
          paths:
            - dist

  deploy:
    parameters:
      bucket:
        description: Google Cloud Storage bucket name where artifact will be deployed to
        type: string
    executor: gcp-cli/default
    steps:
      - attach_workspace:
          at: .
      - gcp-cli/setup:
          version: 404.0.0
      - run:
          name: Push to bucket
          command: gsutil -m cp -r dist/* gs://<< parameters.bucket >>
      - run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployed checkout-sdk to << parameters.bucket >> env from circleci, version: https://github.com/deeperlooknetwork/checkout-sdk/commit/'"$(git rev-parse --short HEAD)"'"}' https://hooks.slack.com/services/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

  publish:
    parameters:
      environment:
        description: The environment we are building. Accepted values - dev, stage, or prod
        type: string
    executor: node/default
    steps:
      - checkout
      - run:
          name: Configure npm for JFrog Artifactory
          command: |
            npm set $ARTIFACTORY_NPM_URL:_authToken=$ARTIFACTORY_SERVICE_AUTH_TOKEN
      - run: npm install
      - run: npm run all:build:<< parameters.environment >>
      - run:
          name: Publish to NPM
          command: |
            npm set @skipifycheckout:registry=$NPM_PUBLISH_URL
            npm set $NPM_PUBLISH_URL:_authToken=$NPM_PUBLISH_TOKEN
            npm publish  

  run-qa-e2e-playwright:
    parameters:
      environment:
        description: Target test environment
        default: dev
        type: enum
        enum: ["dev", "stage"]
      test_name:
        description: Name of the QA test to be executed
        type: string
    working_directory: ~/qa-e2e-playwright
    environment:
      SKIPIFYENV: << parameters.environment >>
    executor:
      name: node/default
      tag: "16.7"
    steps:
      - run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: |
          git clone git@github.com:SkipifyCheckout/qa-e2e-playwright.git ~/qa-e2e-playwright
          git checkout << parameters.environment >>
      - run: |
          npm i
          npx playwright install
          npx playwright install-deps
      - run:
          command: npx playwright test <<parameters.test_name>> --project=chromium
      - run:
          command: npx playwright test <<parameters.test_name>> --project=firefox                        

workflows:
  dev:
    jobs:
      - code-quality:
          context: skipify-dev
      - build:
          environment: dev
          context: skipify-dev
          requires:
            - code-quality
      - run-qa-e2e-playwright:
          environment: dev
          context: skipify-dev
          test_name: shakira/shakiraCheckout.spec.js
          requires:
            - code-quality
      - deploy:
          name: deploy-dev
          bucket: checkout-sdk-dev
          context: skipify-dev
          requires:
            - build
          filters:
            branches:
              only:
                - dev
                - development

  stage:
    jobs:
      - build-approval:
          type: approval
          <<: *stageTagFilter
      - code-quality:
          context: skipify-stage
          requires:
            - build-approval
          <<: *stageTagFilter
      - build:
          environment: stage
          context: skipify-stage
          requires:
            - code-quality
          <<: *stageTagFilter
      - run-qa-e2e-playwright:
          environment: stage
          context: skipify-stage
          test_name: shakira/shakiraCheckout.spec.js
          requires:
            - code-quality                     
      - deploy:
          name: deploy-stage
          bucket: checkout-sdk-stage
          context: skipify-stage
          requires:
            - build
          <<: *stageTagFilter
  prod:
    jobs:
      - build-approval:
          type: approval
          <<: *prodTagFilter
      - code-quality:
          context: skipify-prod
          requires:
            - build-approval
          <<: *prodTagFilter
      - build:
          environment: prod
          context: skipify-prod
          requires:
            - code-quality
          <<: *prodTagFilter
      - deploy:
          name: deploy-prod
          bucket: checkout-sdk
          context: skipify-prod
          requires:
            - build
          <<: *prodTagFilter
      - publish:
          environment: prod
          context: skipify-dev
          requires:
            - build
          <<: *prodTagFilter
